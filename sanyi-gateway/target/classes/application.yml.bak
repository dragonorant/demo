spring:
  redis:
    redisson:
      config: |
        singleServerConfig:
          idleConnectionTimeout: 10000
          connectTimeout: 10000
          timeout: 3000
          retryAttempts: 3
          retryInterval: 1500
          password: null
          subscriptionsPerConnection: 5
          clientName: null
          address: "redis://172.19.1.251:6379"
          subscriptionConnectionMinimumIdleSize: 1
          subscriptionConnectionPoolSize: 50
          connectionMinimumIdleSize: 32
          connectionPoolSize: 64
          database: 0
          dnsMonitoringInterval: 5000
        threads: 0
        nettyThreads: 0
        codec: !<org.redisson.codec.JsonJacksonCodec> {}
        "transportMode": "NIO"
  cloud:
    loadbalancer:
      retry:
        enabled: true
    gateway:
      globalcors:
        cors-configurations:
          '[*]':
            allow-credentials: true
            allowed-origins: "*"
            allowed-headers: "*"
            allowed-methods:
              - OPTIONS
              - GET
              - POST
              - PUT
              - DELETE
      discovery:
        locator:
          enabled: true  # 是否开启，默认为 false 关闭
          url-expression: "'lb://' + serviceId" # 路由的目标地址的表达式，默认为 "'lb://' + serviceId"
          lower-case-service-id: true
      routes:
        - id: yoyo-biz
          uri: lb://yoyo-biz
          predicates:
            - Path=/yoyo/*
          # filters:
          #   # 限流配置
          #   - name: RequestRateLimiter
          #     args:
          #       key-resolver: '#{@remoteAddrKeyResolver}'
          #       redis-rate-limiter.replenishRate: 0
          #       redis-rate-limiter.burstCapacity: 0
        # 认证中心
        - id: pig-auth
          uri: lb://pig-auth
          predicates:
            - Path=/auth/**
          filters:
            # 验证码处理
            - ValidateCodeGatewayFilter
            # 前端密码解密
            - PasswordDecoderFilter
        #UPMS 模块
        - id: pig-upms-biz
          uri: lb://pig-upms-biz
          predicates:
            - Path=/admin/**
          filters:
            # 限流配置
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@remoteAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200
      default-filters:
        - name:
gateway:
  encode-key: 'thanks,pig4cloud'
  ignore-clients:
    - yoyo-biz


